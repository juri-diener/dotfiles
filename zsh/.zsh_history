cd ~/
ls
cd Documents
ls
cd ..
cd Downloads
ls
cd Machfiles-master-ChristianChiarulli\ 
ls
cd zsh
ls
cd .config
ls
cd .zsh
ls -a
cd ..
ls -a
open .
cd ..
open .
ls -a
cd zsh
ls -a
vim .zshrc
cd .config
ls -a
ls
ls
cd zsh
open .
defaults write -g InitialKeyRepeat -int 15
defaults write -g KeyRepeat -int 2
defaults write -g KeyRepeat -int 1
defaults write -g InitialKeyRepeat -int 10
defaults write -g KeyRepeat -int 2
ls
vim zsh-exports
ls
cd .config
ls
cd zsh
ls
vim .zshrc
compaudit
sudo chmod -R 755 /Users/juridiener/.config/zsh/completion/
ls
cd zsh
cd zsh
cd .config/
ls
cd zsh
ls
cd zsh
cd .config/zsh
ls
ls -a
vim .zshrc
vim .zshrc
defaults read com.apple.Accessibility.KeyRepeatEnabled
ls -a
cd .local/
ls -a
cd share
ls -a
cd ~
cd Library/Fonts
ls
ls -a
open .
cd .config
brew install --cask alacritty
cd .config
cd .config
ls
mkdir alacritty
cd alacritty
touch alacritty.yaml
vim alacritty.yaml
cd Library
cd Fonts
open .
cd ~
brew install tmux
uname -a
tmux
tmux
tmux
tmux ls
tmux
tmux
tmux
tmux ls
tmux a
tmux ls
tmux a
tmux a
tmux a
tmux ls
tmux a
tmux ls
clear
tmux
tmux
tmux new -s test
tmux ls
tmux
tmux
tmux
tmux ls
which $SHELL
otool -L $SHELL | grep ncurses
tic -V
/usr/bin/tic -V
infocmp -x tmux-256color >out && /usr/bin/tic -x out
infocmp tmux
tmux
screen
tmux
tmux
tmux
brew install neovim
nvim
nvim
pbcopy --version
cd .config/zsh
ls
cd .config/nvim
ls
mkdir lua/user
mkdir lua
cd lua
mkdir user
ls
touch options.lua
cd ..
ls
nvim init.lua
nvim init.lua
nvim init.lua
nvim init.lua
cd ~
npm install -g prettier
brew install prettier
brew install black
cd .config/
ls
nvim README.md
nvim README.md
cd .config/nvim
nvim init.lua
nvim init.lua
clear
nvim init.lua
nvim init.lua
nvim init.lua
nvim init.lua
nvim init.lua
nvim init.lua
nvim init.lua
cd ~
brew install stylua
brew install luarocks
sudo port install cargo
curl https://sh.rustup.rs -sSf | sh\

brew install fd
npm install -g neovim
gem install neovim
npm update
npm install tree-sitter-phpdoc
npm uninstall tree-sitter-phpdoc
clear
brew install fzf
brew install ripgrep
npm install -g ls_emmet
cd .config
cd tmux
ls
cd ~
expo --version
brew update
brew install watchman
npx install-expo-modules@latest
expo --version
sudo npm uninstall expo-cli
expo --version
expo
expo cli
node --version
npm -g uninstall expo-cli --save
npm -g uninstall expo-cli --save
expo --version
npm -g uninstall expo-cli --save
npm -g uninstall expo-cli --save
npm --location=global uninstall expo-cli --save
npm --location=global uninstall expo-cli --save
expo
expo --version
yarn global remove expo-cli
ls
cd Documents
ls
cd ..
cd Pictures
cd ..
cd Projects
ls
yarn global remove expo-cli
cd react
ls
cd ..
cd react-native
ls
cd pray-for-me
ls
yarn global remove expo-cli
clear
ls
npx expo
expo run ios
expo run:ios
clear
npm uninstall expo-cli
npm uninstall expo-cli
expo --version
node --version
npm install -g n 
n lts
n prune
sudo n lts
n prune
sudo n prune
sudo npm uninstall -g expo-cli
npm install npm@latest -g
sudo npm uninstall --location=global expo-cli
expo cli
expo --
expo --version
clear
clear
npm -g uninstall expo-cli --save
npm -g uninstall expo-cli
yarn --version
clear
clear
npm -g uninstall expo-cli
npm -g uninstall expo-cli --save
npm rm -g expo cli
cd Projects
ls
cd react-native
npm rm -g expo cli
clear
npm install -g expo-cli --save
expo --version
clear
expo whoami
npm install -g expo-cli
expo --version
npm -g uninstall expo-cli --save
expo --version
sudo npm -g uninstall expo-cli --save
npm install -g expo-cli
expo --version
npm i -g expo-cli
expo --version
npm -g uninstall expo-cli --save
expo --version
expo
clear
npm -g uninstall expo-cli --save
expo --version
npm -g uninstall expo-cli --save
npm list -g expo-cli
npm uninstall -g expo-cli
expo --version
cd /usr/local/lib/node_modules/expo-cli
sudo rm -rf /usr/local/lib/node_modules/expo-cli
ls
cd ..
ls
cd /usr/local/lib/node_modules/expo-cli
expo --version
clear
cd ~
ls
ls -la
cd .config
ls
git branch
clear
git status
git add .
git commit -m "just test"
git push
git remote branch -v 
git remote -v
clear
git push
git push
ls
clear
gst
git status
clear
git branch
ls
nvim App.tsx
git status
git push origin test
git remote -v
git remove -v
git remove
git remote
git remote -v
git init
git branch -M main
git remote add origin https://github.com/juri-diener/my-app.git
git push -u origin main
clear
nvim --version
brew remove neovim
nvim --version
nvim
brew install nvim
nvim 
nvim --version
brew tap homebrew/cask-versions
brew install --cask wezterm-nightly
clear
mv ~/.config/nvim{,.bak}
cd ~/.config
ls
mv ~/.local/share/nvim{,.bak}
mv ~/.local/state/nvim{,.bak}
mv ~/.cache/nvim{,.bak}
nvim
git clone https://github.com/LazyVim/starter ~/.config/nvim
nvim
rm -rf ~/.config/nvim/.git
git branch
clear
rm -rf ~/.config/nvim/.git
ls -la
git branch
clear
nvim
nvim
clear
cd Projects/react-native
ls
clear
npx create-expo-app --template
cd my-app
npm run ios
ls
pwd
cd Projects
ls
cd react-native/
ls
cd .config
ls
cd nvim
ls
cd lua
ls
cd config
ls
clear
cat autocmds.lua
cat keymaps.lua
cat options.lua
clear
open 
open .
clear
brew tap homebrew/cask-fonts
brew install --cask font-jetbrains-mono-nerd-font
cd Projects/react-native/my-app
clear
clear
amplify pull --appId d2q2vsulvbo87d --envName staging
clear
cd Projects/react-native/my-app
amplify pull --appId d2q2vsulvbo87d --envName staging
amplify update auth
amplify update function
amplify update function
amplify add function
cd amplify/backend/function/CreateUserFromCognitoUser/src
npm install node-fetch@2
amplify update function
amplify update function
amplify update function
amplify add function
amplify add function
amplify add function
amplify remove function
amplify add function
amplify remove function
amplify remove function
amplify add function
cat /Users/juridiener/Projects/react-native/my-app/amplify/backend/function/test/custom-policies.json
amplify remove function
amplify remove function
ls
cd ..
ls
clear
cd Projects/react-native/my-app
ls
ls
clear
cd Projects/react-native/my-app
ls'\
ls\
''\
'
clear
ls
clear
clear
amplify pull --appId d2q2vsulvbo87d --envName staging
clear
amplify pull --appId d2q2vsulvbo87d --envName staging
amplify pull --appId d2q2vsulvbo87d --envName staging
amplify pull --appId d2q2vsulvbo87d --envName staging
ls
cd MyDocuments/my-app/
ls
cd ..
cd ..
cd Projects/react-native/my-app
clear
amplify mock
amplify mock
amplify mock
amplify mock
clear
amplify mock
amplify mock
cd Projects/react-native/my-app
amplify mock
brew info java
java -version
sudo ln -sfn /opt/homebrew/opt/openjdk/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk.jdk
echo 'export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"' >> ~/.zshrc
export CPPFLAGS="-I/opt/homebrew/opt/openjdk/include"
brew install openjdk
clear
cd Projects/react-native/my-app
amplify mock
clear
ls
ls -la
vim .zshrc
source .zshrc
emulator -avd Pixel_6
emulator -list-avds
~/Library/Android/sdk/tools/emulator -avd Pixel_6
emulator -list-avds
brew install --cask wezterm\

brew upgrade --cask wezterm-nightly --no-quarantine --greedy-latest\

brew upgrade --cask wezterm-nightly --no-quarantine --greedy-latest\

cd ~
ls
ls -la
clear
cd .config
ls
cd wezterm
ls
nvim wezterm.lua
cd Documents/
ls
ls
cd ..
ls
cd Projects/react-native/
ls
cd app-connect
ls
cd ..
cd app-amplify
ls
clear
npm i @aws-amplify/cli@11.0.5
clear
npm install -g @aws-amplify/cli@11.0.5
clear
amplify init
npm install -g @aws-amplify/cli@11.0.5
npm install -g @aws-amplify/cli@11.0.5
npm install -g @aws-amplify/cli@11.0.5
amplify --version
cd Projects
ls
cd react-native
ls
cd app-connect
ls
cd ..
ls 
rm -rf app-connect my-app test-amplify
ls
open .
ls
cd amplify-app-connect
ls
clear
npm install -g @aws-amplify/cli@11.0.5
amplify --version
amplify --version
amplify --version
amplify --version
cd Projects
ls
cd react-native/
ls
cd amplify-app-connect
clear
amplify init
amplify add api
ls
touch ./my_custom_style.css
ls
open my_custom_style.css
nvim my_custom_style.css
ls
clear
nvim my_custom_style.css
mv my_custom_style.css dj-image.css
ls
touch dj-colors.css
nvim dj-colors.css
nvim dj-colors.css
brew install watchman
brew install --cask zulu@17
ls
ls -la
cd .config
ls
cd zsh
ls
nvim zshrc
cd ~/
ls
cd .config
cd zsh
nvim zshrc
cd ~
source $HOME/.zshrc
$HOME
ls
nvim .config/zsh/zshrc
source $HOME/.zshrc
adb
adb devices
adb devices
scrcpy --no-audio --record=header.mp4 -d
scrcpy --no-audio --record=header.mp4 -d
java -version
which emulator
which adb
ls -la
cat zsh-exports
nvim zsh-exports
cat zsh-exports
nvim zsh-exports
cd .config/zsh
nvim zsh-exports
nvim zsh-exports
emulator -avd Pixel_4_API_33
brew install sst/tap/opencode
sudo rm -rf /Library/Developer/CommandLineTools
sudo rm -rf /Library/Developer/CommandLineTools
sudo xcode-select --install
brew install sst/tap/opencode
opencode --version
clear
opencode auth login
opencode
clear
